import { use } from '../utils';
import { BLUE } from '../utils/color';
import { ParentMixin } from '../mixins/relation';
import { ClickOutsideMixin } from '../mixins/click-outside';

var _use = use('dropdown-menu'),
    sfc = _use[0],
    bem = _use[1];

export default sfc({
  mixins: [ParentMixin('vanDropdownMenu'), ClickOutsideMixin({
    event: 'click',
    method: 'onClickOutside'
  })],
  props: {
    overlay: {
      type: Boolean,
      "default": true
    },
    zIndex: {
      type: Number,
      "default": 10
    },
    duration: {
      type: Number,
      "default": 0.2
    },
    activeColor: {
      type: String,
      "default": BLUE
    },
    closeOnClickOverlay: {
      type: Boolean,
      "default": true
    }
  },
  data: function data() {
    return {
      top: 0
    };
  },
  methods: {
    toggleItem: function toggleItem(active) {
      var menu = this.$refs.menu;
      var rect = menu.getBoundingClientRect();
      this.top = rect.top + rect.height;
      this.children.forEach(function (item, index) {
        if (index === active) {
          item.toggle();
        } else if (item.showPopup) {
          item.hide(true);
        }
      });
    },
    onClickOutside: function onClickOutside() {
      this.children.forEach(function (item) {
        item.hide();
      });
    }
  },
  render: function render(h) {
    var _this = this;

    var Titles = this.children.map(function (item, index) {
      return h("div", {
        "attrs": {
          "role": "button",
          "tabindex": item.disabled ? -1 : 0
        },
        "class": bem('item', {
          disabled: item.disabled
        }),
        "on": {
          "click": function click() {
            if (!item.disabled) {
              _this.toggleItem(index);
            }
          }
        }
      }, [h("span", {
        "class": [bem('title', {
          active: item.show
        }), item.titleClass],
        "style": {
          color: item.showPopup ? _this.activeColor : ''
        }
      }, [item.displayTitle])]);
    });
    return h("div", {
      "ref": "menu",
      "class": [bem(), 'van-hairline--top-bottom']
    }, [Titles, this.slots('default')]);
  }
});